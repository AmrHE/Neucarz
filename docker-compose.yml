version: "3.8"

services:
  mysqldb:
    image: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=DATABASE_PASSWORD_123456
      - MYSQL_DATABASE=neucarz
    ports:
      - 3307:3306
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - shared-network
    volumes:
      - db-config:/etc/mysql
      - db-data:/var/lib/mysql
      - ./db/backup/files:/data_backup/data
    cap_add:
      - SYS_NICE

  # nginx:
  #   image: nginx:latest
  #   container_name: nginx-prod
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf
  #   ports:
  #     - 80:80
  #   command: /bin/sh -c "nginx -g 'daemon off;'"
  #   depends_on:
  #     api-prod:
  #       condition: service_healthy
  #     app-prod:
  #       condition: service_started
  #   networks:
  #     - shared-network
  # ./bin/wait-for -t 0 mysqldb:3306 --

  api-prod:
    container_name: nestjs_api_prod
    image: nestjs-api-prod:1.0.0
    build:
      context: neucarz-nestjs
      target: production
      dockerfile: Dockerfile
    command: sh -c 'npm run start:prod'
    depends_on:
      - mysqldb
    networks:
      - shared-network
    ports:
      - 9000:9000
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "http://api_prod:9000"]
      interval: 5s
      timeout: 3s
      retries: 6

  app-prod:
    container_name: react_app_prod
    image: react-app-prod:1.0.0
    build:
      context: neucarz-reactjs
      target: production
      dockerfile: Dockerfile
    command: npm run start:prod
    ports:
      - 3000:3000
    networks:
      - shared-network
    restart: unless-stopped

  redis:
    image: redis:alpine
    ports:
      - 6379:6379

networks:
  shared-network:

volumes:
  db-config:
  db-data:
